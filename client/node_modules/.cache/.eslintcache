[{"/Users/nikki/GoogleBooks/google-books/client/src/index.js":"1","/Users/nikki/GoogleBooks/google-books/client/src/App.js":"2","/Users/nikki/GoogleBooks/google-books/client/src/reportWebVitals.js":"3","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/index.js":"4","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/App.js":"5","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/reportWebVitals.js":"6","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/components/Header.js":"7","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/pages/savedBooks.js":"8","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/pages/SavedBooks.js":"9","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/utils/api.js":"10","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/components/Navbar/navbar.js":"11","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/pages/Homepage.js":"12","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/components/CardDisplay.js":"13","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/components/List.js":"14"},{"size":500,"mtime":1615119289173,"results":"15","hashOfConfig":"16"},{"size":528,"mtime":1615119289171,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1615119289175,"results":"18","hashOfConfig":"16"},{"size":500,"mtime":1615218638723,"results":"19","hashOfConfig":"20"},{"size":2011,"mtime":1617038633131,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1615218638723,"results":"22","hashOfConfig":"20"},{"size":1022,"mtime":1617036700291,"results":"23","hashOfConfig":"20"},{"size":259,"mtime":1616008646923,"results":"24","hashOfConfig":"25"},{"size":1293,"mtime":1617038190920,"results":"26","hashOfConfig":"20"},{"size":808,"mtime":1617039622595,"results":"27","hashOfConfig":"20"},{"size":1860,"mtime":1617038696729,"results":"28","hashOfConfig":"20"},{"size":3223,"mtime":1617036486334,"results":"29","hashOfConfig":"20"},{"size":1655,"mtime":1617036712035,"results":"30","hashOfConfig":"20"},{"size":247,"mtime":1617036688889,"results":"31","hashOfConfig":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tscp0q",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"176h80x",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t5vdox",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nikki/GoogleBooks/google-books/client/src/index.js",[],"/Users/nikki/GoogleBooks/google-books/client/src/App.js",[],"/Users/nikki/GoogleBooks/google-books/client/src/reportWebVitals.js",[],"/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/index.js",[],"/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/App.js",[],"/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/reportWebVitals.js",[],"/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/components/Header.js",[],"/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/pages/savedBooks.js",[],"/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/pages/SavedBooks.js",["65"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/api\";\nimport CardDisplay from \"../components/CardDisplay\";\nimport { List } from \"../components/List\";\nclass SavedBooks extends Component {\n  state = {\n    books: [],\n  };\n  async componentDidMount() {\n    const allbooks = await (await API.getAllBooks()).data;\n    this.setState({ books: allbooks });\n    console.log(\"data of allbooks \",allbooks);\n  }\n  render() {\n    return (\n      <div>\n        {this.state.books.length ? (\n          <List>\n            {this.state.books.map((book, i, array) => {\n              return (\n                <CardDisplay\n                  id={book._id}\n                  key={book._id}\n                  title={book.title}\n                  description={book.description}\n                  image={book.image_link}\n                  link={book.link}\n                  bookArray={array}\n                  showSave={false}\n                  // Button={() => {\n                  //   <button onClick={() => this.handleSave(book.id)}>Save Book</button>;\n                  // }}\n                />\n              );\n            })}\n          </List>\n        ) : (\n          <h3>Enter a book</h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SavedBooks;\n","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/utils/api.js",["66","67"],"import axios from \"axios\";\n// import express from \"express\";\nimport React, { Component } from \"react\";\nconst getSearchedBooks = async (search = \"red\") => {\n  return await axios.get(\n    \"https://www.googleapis.com/books/v1/volumes?q=\" +\n      search +\n      \"&key=\" +\n      \"AIzaSyAmukOX6JHM53iVJC7RJzMP-lGFQSiJ618\" +\n      \"&maxResults=40\"\n  );\n};\n\nconst deleteDbBook = async (id) => {\n  return await axios.delete(\"/api/books/\" + id);\n};\nconst saveDbBook = async (book) => {\n  return await axios.post(\"/api/books\", book);\n};\n\nconst getAllBooks = async () => {\n  return await axios.get(\"/api/books\");\n};\n\n//eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getSearchedBooks: getSearchedBooks,\n  deleteDbBook: deleteDbBook,\n  saveDbBook: saveDbBook,\n  getAllBooks: getAllBooks,\n};","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/components/Navbar/navbar.js",["68","69","70"],"import { faFontAwesome } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      // <nav className=\"navbar fixed-top\" style={{ backgroundColor: \"#ADD8E6\", marginBottom: \"40px\",  height: \"50px\" }}>\n      //     <Link to=\"searchforbooks\" style= {{color: \"#00BFFF\", fontSize: \"25px\", marginRight: \"10px\"}} >Home</Link>\n      //     <Link to=\"savedbooks\" style= {{color: \"#00BFFF\", fontSize: \"25px\"}}>View Saved</Link>\n      // </nav>\n\n      <nav\n        className=\"navbar navbar-expand-lg \"\n        style={{ backgroundColor: \"#ADD8E6\" }}\n      >\n        {/* <a className=\"navbar-brand\" href=\"#\">\n          Navbar\n        </a> */}\n        <div className=\"container\">\n          {\" \"}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <Link to=\"/\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\" >\n                    Home <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n              </Link>\n              <Link to=\"/savedbooks\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\">\n                    View Saved\n                  </a>\n                </li>\n              </Link>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/pages/Homepage.js",["71"],"import React, { Component } from \"react\";\nimport API from \"../utils/api\";\nimport CardDisplay from \"../components/CardDisplay\";\nimport { Link } from \"react-router-dom\";\nimport { List } from \"../components/List\";\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      search: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    const book = event.target.value;\n    this.setState({ ...this.state, search: book });\n  };\n  getSearchedBooks = async () => {\n    const SearchedBooks = await API.getSearchedBooks(this.state.search);\n    console.log(SearchedBooks);\n    this.setState({ books: SearchedBooks.data.items });\n    console.log(SearchedBooks)\n  \n  };\n  handleSave = async (id, booksArray) => {\n    const bookToBeSaved = this.state.books.find((book) => book.id === id);\n\n    await API.saveDbBook({\n      _id: bookToBeSaved.id,\n      title: bookToBeSaved.volumeInfo.title,\n      authors: bookToBeSaved.volumeInfo.authors,\n      description: bookToBeSaved.volumeInfo.description,\n      image: bookToBeSaved.volumeInfo.imageLinks.thumbnail,\n      link: bookToBeSaved.volumeInfo.infoLink,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {/* <nav>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"savedbooks\">View Saved</Link>\n        </nav> */}\n        <div className=\"input-group mb-3 w-50 text-center\">\n          <input\n            type=\"text\"\n            onChange={this.handleChange}\n            className=\"form-control\"\n            placeholder=\"Search books\"\n            aria-label=\"Recipient's username\"\n            aria-describedby=\"basic-addon2\"\n          />\n          <div className=\"input-group-append\">\n            <button\n              onClick={this.getSearchedBooks}\n              type=\"submit\"\n              className=\"input-group-text\"\n            >\n              Search\n            </button>\n          </div>\n        </div>\n\n        {this.state.books.length ? (\n          <List>\n            {this.state.books.map((book, i, array) => {\n              return (\n                <CardDisplay\n                  id={book.id}\n                  key={book.id}\n                  title={book.volumeInfo.title}\n                  description={book.volumeInfo.description}\n                  image={\n                    book.volumeInfo.imageLinks\n                      ? book.volumeInfo.imageLinks.thumbnail\n                      : \"https://previews.123rf.com/images/pavelstasevich/pavelstasevich1811/pavelstasevich181101065/112815953-no-image-available-icon-flat-vector.jpg\"\n                  }\n                  // image={(function () {\n                  //   let image = book.volumeInfo.imageLinks.thumbnail;\n                  //   return image;\n                  // })()}\n                  link={book.volumeInfo.infoLink}\n                  bookArray={array}\n                  showSave={true}\n                  // Button={() => {\n                  //   <button onClick={() => this.handleSave(book.id)}>Save Book</button>;\n                  // }}\n                />\n              );\n            })}\n          </List>\n        ) : (\n          <h3>Enter a book</h3>\n        )}\n      </div>\n    );\n  }\n}\nexport default Homepage;\n","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/components/CardDisplay.js",["72"],"import React from \"react\";\nimport { CardListItem } from \"./List\";\nimport API from \"../utils/api\";\nconst saveit = async () => {\n  console.log(\"saveing \");\n};\nconst handleSave = async (id, booksArray) => {\n  const bookToBeSaved = booksArray.find((book) => book.id === id);\n\n  const resp = await API.saveDbBook({\n    _id: bookToBeSaved.id,\n    title: bookToBeSaved.volumeInfo.title,\n    authors: bookToBeSaved.volumeInfo.authors,\n    description: bookToBeSaved.volumeInfo.description,\n    image_link: bookToBeSaved.volumeInfo.imageLinks.thumbnail,\n    link: bookToBeSaved.volumeInfo.infoLink,\n  });\n  console.log(resp);\n};\nfunction CardDisplay({\n  id,\n  title,\n  authors,\n  link,\n  image,\n  description,\n  Button,\n  bookArray,\n  showSave,\n}) {\n  return (\n    <CardListItem>\n      <div className=\"card\" id={id} key={id}>\n        <div className=\"card-body\">\n          <div className=\"img-container\">\n            <h5>{title}</h5>\n            <h6>{authors}</h6>\n            {/* <Button /> */}\n            <a href={link}>\n              <img alt={title} src={image} />\n            </a>\n\n            <p>{description}</p>\n\n            <a href={link}>\n              <button className=\"btn btn-primary mr-3\">View Book</button>\n            </a>\n\n            {showSave ? (\n              <button\n                onClick={() => {\n                  handleSave(id, bookArray);\n                  // console.log(bookArray);\n                }}\n                className=\"btn btn-primary pl-3\"\n              >\n                Save\n              </button>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </CardListItem>\n  );\n}\n\nexport default CardDisplay;\n","/Users/nikki/GoogleBooksNew/GoogleBooks/client/src/components/List.js",[],{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":13},{"ruleId":"73","severity":1,"message":"78","line":3,"column":17,"nodeType":"75","messageId":"76","endLine":3,"endColumn":26},{"ruleId":"73","severity":1,"message":"79","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":37,"column":19,"nodeType":"82","endLine":37,"endColumn":44},{"ruleId":"80","severity":1,"message":"81","line":44,"column":19,"nodeType":"82","endLine":44,"endColumn":43},{"ruleId":"73","severity":1,"message":"74","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":14},{"ruleId":"73","severity":1,"message":"83","line":4,"column":7,"nodeType":"75","messageId":"76","endLine":4,"endColumn":13},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'Component' is defined but never used.","'faFontAwesome' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'saveit' is assigned a value but never used."]